{"version":3,"sources":["js/transactions.js","index.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","transaction","makeTransaction","Promise","resolve","reject","delay","setTimeout","logSuccess","id","logError","console","log","warn","amount","then","catch"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC7BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGlDK,EAAc,GAEpB,SAASC,EAAgBD,GACd,OAAA,IAAIE,QAAQ,CAACC,EAASC,KACnBC,MAAAA,EAAQX,EAA0B,IAAK,KAC7CY,WAAW,KACYT,KAAKE,SAAW,IAE/BI,EAAQI,EAAWP,EAAYQ,GAAIH,IAEvCD,EAAOK,EAAST,EAAYQ,MAC7BH,KAIX,SAASE,EAAWC,EAAIH,GACpBK,QAAQC,mBAAmBH,kBAAmBH,OAGlD,SAASI,EAASD,GACdE,QAAQE,qCAAqCJ,8BAoBjDP,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC7BC,KAAKP,GACLQ,MAAMN,GAEXR,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC7BC,KAAKP,GACLQ,MAAMN,GAEXR,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,KAC7BC,KAAKP,GACLQ,MAAMN,GAEXR,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC7BC,KAAKP,GACLQ,MAAMN;;ACxDX,aAAA,QAAA","file":"src.57ad952f.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst transaction = {};\n\nfunction makeTransaction(transaction) {\n    return new Promise((resolve, reject) => {\n        const delay = randomIntegerFromInterval(200, 500);\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n            if (canProcess) {\n                resolve(logSuccess(transaction.id, delay));\n            }\n            reject(logError(transaction.id));\n        }, delay);\n    });\n};\n\nfunction logSuccess(id, delay) {\n    console.log(`Transaction ${id} processed in ${delay}ms`);\n};\n\nfunction logError(id) {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n// function lottery() {\n//     return new Promise(resolve => {\n//         const canProcess = Math.random() > 0.3;\n//         resolve(canProcess);\n//     });\n// };\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);\n","// import './js/delay';\n// import './js/toggle_user';\nimport './js/transactions';\n"]}